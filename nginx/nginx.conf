events { worker_connections 2048; }
http {
    # Increase the max body size from the default of 1MB to 500MB
    client_max_body_size 500M;
    # Increase proxy timeout from 60s to 600s
    proxy_connect_timeout 600;
    proxy_send_timeout    600;
    proxy_read_timeout    600;
    send_timeout          600;

    server {
        listen 3000;

        # Add security headers at server level
        add_header Content-Security-Policy "upgrade-insecure-requests" always;

        location /ws {
            proxy_http_version 1.1;
            proxy_set_header Accept-Encoding gzip;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            add_header Cache-Control no-cache;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Real-IP $remote_addr;
            # Critical: Add these headers for HTTPS detection
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Scheme https;
            proxy_set_header X-Forwarded-Port 443;
            proxy_set_header X-Forwarded-Host $host;
            proxy_pass http://localhost:7860;
        }

        location /queue/join {
            proxy_http_version 1.1;
            proxy_set_header Accept-Encoding gzip;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            add_header Cache-Control no-cache;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Real-IP $remote_addr;
            # Critical: Add these headers for HTTPS detection
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Scheme https;
            proxy_set_header X-Forwarded-Port 443;
            proxy_set_header X-Forwarded-Host $host;
            proxy_pass http://localhost:7860;
        }

        location / {
            add_header Cache-Control no-cache;
            proxy_pass http://localhost:7860;
            proxy_http_version 1.1;
            proxy_set_header Accept-Encoding gzip;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # Critical: Force HTTPS headers
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Scheme https;
            proxy_set_header X-Forwarded-Port 443;
            proxy_set_header X-Forwarded-Host $host;
            proxy_intercept_errors on;
            error_page 502 =200 @502;
        }

        location /README.md {
            root /usr/share/nginx/html;
        }

        location @502 {
            # kill cache
            add_header Last-Modified $date_gmt;
            add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
            if_modified_since off;
            expires off;
            etag off;
            root /usr/share/nginx/html;
            rewrite ^(.*)$ /502.html break;
        }
    }

    server {
        listen 3005;

        location / {
            add_header Cache-Control no-cache;
            proxy_pass http://localhost:3006;
            proxy_http_version 1.1;
            proxy_set_header Accept-Encoding gzip;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # Also add here if this serves HTTPS content
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Scheme https;
            proxy_set_header X-Forwarded-Port 443;
            proxy_set_header X-Forwarded-Host $host;
            proxy_intercept_errors on;
            error_page 502 =200 @502;
        }

        location /README.md {
            root /usr/share/nginx/html;
        }

        location @502 {
            # kill cache
            add_header Last-Modified $date_gmt;
            add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
            if_modified_since off;
            expires off;
            etag off;
            root /usr/share/nginx/html;
            rewrite ^(.*)$ /502.html break;
        }
    }
}
